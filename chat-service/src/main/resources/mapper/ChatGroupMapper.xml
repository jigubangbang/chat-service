<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jigubangbang.chat_service.mapper.ChatMapper">

   <resultMap id="chatRoomResultMap" type="com.jigubangbang.chat_service.model.ChatRoomDto">
      <id property="id" column="id"/>
      <result property="groupType" column="group_type"/>
      <result property="groupId" column="group_id"/>
      <result property="description" column="description"/>
   </resultMap>

   <resultMap id="chatGroupResultMap" type="com.jigubangbang.chat_service.model.ChatGroupDto">
      <id property="id" column="id"/>
      <result property="groupType" column="group_type"/>
      <result property="groupId" column="group_id"/>
      <result property="userId" column="user_id"/>
      <result property="nickname" column="nickname"/>
      <result property="profileImage" column="profile_image"/>
      <result property="joinedAt" column="joined_at"/>
      <result property="isCreator" column="is_creator"/>
   </resultMap>

   <select id="getChatRoomInfo" parameterType="java.lang.Long" resultMap="chatRoomResultMap">
      SELECT id, group_type, group_id, description
      FROM chat_room
      WHERE id = #{chatId}
  </select>

  <select id="getChatGroupMemberWithNickname" resultMap="chatGroupResultMap">
      SELECT gu.id, gu.group_type, gu.group_id, gu.user_id, u.nickname, u.profile_image, gu.joined_at, gu.is_creator
        FROM chat_room cr
            JOIN group_user gu ON cr.group_type = gu.group_type AND cr.group_id = gu.group_id
            JOIN user u ON gu.user_id = u.user_id
        WHERE cr.id = #{chatId} AND gu.user_id = #{userId}
  </select>

  <select id="getChatGroupMember" resultMap="chatGroupResultMap">
      SELECT gu.id, gu.group_type, gu.group_id, gu.user_id, gu.joined_at, gu.is_creator
        FROM chat_room cr
            JOIN group_user gu ON cr.group_type = gu.group_type AND cr.group_id = gu.group_id
        WHERE cr.id = #{chatId} AND gu.user_id = #{userId}
  </select>

  <select id="getChatGroupMembers" resultMap="chatGroupResultMap">
      SELECT gu.id, gu.group_type, gu.group_id, gu.user_id, u.nickname, u.profile_image, gu.joined_at, gu.is_creator
        FROM chat_room cr
            JOIN group_user gu ON cr.group_type = gu.group_type AND cr.group_id = gu.group_id
            JOIN user u ON gu.user_id = u.user_id
        WHERE cr.id = #{chatId}
  </select>

<select id="getChatGroupCreators" parameterType="Long" resultMap="chatGroupResultMap">
    SELECT gu.id, gu.group_type, gu.group_id, gu.user_id, u.nickname, u.profile_image, gu.joined_at, gu.is_creator
    FROM chat_room cr
        JOIN group_user gu ON cr.group_type = gu.group_type AND cr.group_id = gu.group_id
        JOIN user u ON gu.user_id = u.user_id
      WHERE cr.id = #{chatId} 
          AND gu.is_creator = 1
      ORDER BY gu.joined_at ASC
</select>

  <delete id="removeGroupMemberByCreator" parameterType="map"> 
      DELETE FROM group_user
        WHERE group_id = (SELECT group_id FROM chat_room WHERE id = #{chatId})
            AND group_type = (SELECT group_type FROM chat_room WHERE id = #{chatId})
            AND user_id = #{userId}
  </delete>

  <delete id="leaveGroupMemberByUser"> 
      DELETE FROM group_user 
        WHERE group_id= (SELECT group_id FROM chat_room WHERE id = #{chatId})
          AND group_type = (SELECT group_type FROM chat_room WHERE id = #{chatId})
          AND user_id = #{userId}
  </delete>

  <!-- 삭제할 멤버 ID들 조회 (Primary Key 수집) -->
  <select id="getChatGroupMemberIds" parameterType="Long" resultType="Long">
      SELECT gu.id
      FROM group_user gu
      INNER JOIN chat_room cr ON gu.group_type = cr.group_type AND gu.group_id = cr.group_id
      WHERE cr.id = #{chatId}
  </select>

  <!-- Primary Key로 개별 삭제 (Safe Update Mode 문제 없음) -->
  <delete id="deleteChatGroupMemberById" parameterType="Long">
      DELETE FROM group_user WHERE id = #{id}
  </delete>

  <!-- 채팅방 정보 삭제 -->
  <delete id="deleteChatRoom" parameterType="Long">
      DELETE FROM chat_room 
      WHERE id = #{chatId}
  </delete>

  <update id="promoteToAdmin">
      UPDATE group_user SET is_creator = 1
        WHERE group_type = #{groupType}
          AND group_id = #{groupId}
          AND user_id = #{userId}
  </update>

  <update id="demoteAdmin">
      UPDATE group_user SET is_creator = 0
        WHERE group_type = #{groupType}
          AND group_id = #{groupId}
          AND user_id = #{userId}
  </update>

  <update id="saveDescription">
    UPDATE chat_room
    SET description = #{description}
    WHERE id = #{id}
  </update>

</mapper>